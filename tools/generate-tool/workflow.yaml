name: "üßô‚Äç‚ôÇÔ∏è Generate Tool"

on:
  workflow_dispatch:
    inputs:
      tool-name:
        description: 'Name of the tool'
        required: true
      tool-inputs:
        description: 'Inputs required for the tool'
        required: true
      agent-instructions:
        description: 'What should the agent do when the tool is executed?'
        required: true
      template-tool:
        description: 'ID of the tool to be used as example'
        required: true
        default: 'quick-code-change'

jobs:
  automate-tool-creation:
    runs-on: ubuntu-latest
    steps:
      - name: Automate Tool Creation
        uses: PR-Pilot-AI/smart-actions/quick-task@v1
        with:
          api-key: ${{ secrets.PR_PILOT_API_KEY }}
          agent-instructions: |
            Your task is to generate a new Github workflow.
            The workflow's purpose is to serve as a tool for the user to interact with an AI agent
            that can operate on the repository.
            
            The workflow should be called `${{ github.event.inputs.tool-name }}`.
            
            It should have the following inputs:
            ``` 
            ${{ github.event.inputs.tool-inputs }}
            ```
            
            When triggered, the user wants the agent to do the following with the given inputs:
            ```
            ${{ github.event.inputs.agent-instructions }}
            ```
            
            These instructions need to be turned into an actionable step-by-step guide for the AI agent to follow.
            Make sure the step-by-step instructions are clear and concise.
            
            Assume that the agent has the same capabilities as you do. It is important to only include 
            instructions that are within the agent's capabilities.
            
            The workflow file must fulfill the following criteria:
            - Name of the workflow starts with an emoji (UTF-8 character)
            - Has only one job with one step that uses `PR-Pilot-AI/smart-actions/quick-task@v1`
            - The step should have the following inputs:
              - `api-key` (similar to reference workflow)
              - `agent-instructions` (Step-by-step instructions for the AI agent)
            
            If the agent's task requires data from the workflow run (e.g. issue ID, commit msg, etc),
            then the text for `agent-instructions` should have these values injected into them using the 
            github context variables.
            
            Do the following:
            1. Read `tools/${{ github.event.inputs.template-tool }}/workflow.yaml` as reference to understand the desired structure of the workflow file.
            2. Turn the free-text instructions provided by the user into actionable step-by-step instructions for the AI agent.
            3. Generate the new Github workflow file in `tools/<tool-name-slug>/workflow.yaml`
            4. Read `tools/${{ github.event.inputs.template-tool }}/README.md` as reference to understand the desired structure of the README file for the workflow.
            5. Generate the new README file in `tools/<tool-name-slug>/README.md`
            6. Add the tool to `index.yaml` with the appropriate details
            7. Add the tool to the README.md file with the appropriate details