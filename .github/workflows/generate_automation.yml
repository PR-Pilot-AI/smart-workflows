name: "üßô‚Äç‚ôÇÔ∏è Generate Automation"

on:
  workflow_dispatch:
    inputs:
      automation-name:
        description: 'Name of the automation'
        required: true
      trigger:
        description: 'What should trigger the automation?'
        required: true
      goal:
        description: 'What should the automation accomplish when it is triggered?'
        required: true

jobs:
  create-new-automation:
    runs-on: ubuntu-latest
    steps:
      - name: Create New Automation
        uses: PR-Pilot-AI/smart-actions/quick-task@v1
        with:
          api-key: ${{ secrets.PR_PILOT_API_KEY }}
          agent-instructions: |
            Your task is to generate a new Github workflow.
            The workflow's purpose is to have an AI agent respond to a given trigger in the repository.
            
            The workflow should be called `${{ github.event.inputs.automation-name }}`.
            
            It should be triggered when:
            **${{ github.event.inputs.trigger }}**
            
            When triggered, the user workflow should accomplish the following goal:
            **${{ github.event.inputs.goal }}**
            
            The workflow file must fulfill the following criteria:
            - Name of the workflow starts with an emoji (UTF-8 character)
            - Has only one job with at least one step that uses `PR-Pilot-AI/smart-actions/quick-task@v1`
            - The step should have the following inputs:
              - `api-key` (similar to reference workflow)
              - `agent-instructions` (Step-by-step instructions for the AI agent)
            
            If the agent's task requires data from the workflow run (e.g. issue ID, commit msg, etc),
            or output from previous steps, then the text for `agent-instructions` should have these values injected 
            into them using the github context variables.
            
            The agent instructions need to be an actionable step-by-step guide for the AI agent to follow.
            Make sure the step-by-step instructions are clear and concise.
            
            Assume that the agent has the same capabilities as you do. It is important to only include 
            instructions that are within the agent's capabilities.
            
            Do the following:
            1. Read `automations/investigate-bug/workflow.yaml` as reference to understand the desired structure of the workflow file.
            2. Turn the workflow goal provided by the user into job steps and actionable step-by-step instructions for the AI agent.
            3. Generate the new Github workflow file in `automations/<automation-name-slug>/workflow.yaml`
            4. Read `automations/investigate-bug/README.md` as reference to understand the desired structure of the README file for the workflow.
            5. Generate the new README file in `automations/<automation-name-slug>/README.md`
            6. Add the automation to `index.yaml` with the appropriate details
            7. Add the automation to the README.md file with the appropriate details
